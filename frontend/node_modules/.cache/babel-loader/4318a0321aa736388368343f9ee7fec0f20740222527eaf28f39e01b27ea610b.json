{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dg\\\\Documents\\\\fullstack-app\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CreateProduct from '../components/CreateProduct';\nimport ProductList from '../components/ProductList';\nimport UpdateProduct from '../components/UpdateProduct';\nimport api from '../api';\nimport { Container, Box, TextField, Button, Typography, Card, CardContent, CardActions, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null); // Estado para producto seleccionado\n\n  // Función para obtener todos los productos\n  const fetchProducts = async () => {\n    try {\n      const response = await api.get('/products');\n      setProducts(response.data); // Actualizar el estado con los productos obtenidos\n    } catch (error) {\n      console.error('Error al obtener los productos:', error);\n    }\n  };\n\n  // Ejecutar fetchProducts cuando el componente se monta\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Función para seleccionar un producto para editar\n  const handleEdit = product => {\n    setSelectedProduct(product); // Establecer el producto seleccionado\n  };\n\n  // Función para actualizar la lista de productos después de una actualización\n  const handleUpdate = async () => {\n    await fetchProducts(); // Actualizar la lista de productos\n    setSelectedProduct(null); // Limpiar el producto seleccionado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to your Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateProduct, {\n      onProductCreated: fetchProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products // Lista de productos\n      ,\n      onDelete: fetchProducts // Función para actualizar la lista después de eliminar\n      ,\n      onEdit: handleEdit // Función para seleccionar un producto para editar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedProduct && /*#__PURE__*/_jsxDEV(UpdateProduct, {\n      productId: selectedProduct._id,\n      onProductUpdated: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"vkC9d0Hi2vaeZt6FiFZShq2GrQU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","CreateProduct","ProductList","UpdateProduct","api","Container","Box","TextField","Button","Typography","Card","CardContent","CardActions","Grid","jsxDEV","_jsxDEV","Home","_s","products","setProducts","selectedProduct","setSelectedProduct","fetchProducts","response","get","data","error","console","handleEdit","product","handleUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","onProductCreated","onDelete","onEdit","productId","_id","onProductUpdated","_c","$RefreshReg$"],"sources":["C:/Users/dg/Documents/fullstack-app/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CreateProduct from '../components/CreateProduct';\r\nimport ProductList from '../components/ProductList';\r\nimport UpdateProduct from '../components/UpdateProduct';\r\nimport api from '../api';\r\nimport { Container, Box, TextField, Button, Typography, Card, CardContent, CardActions, Grid } from '@mui/material';\r\n\r\n\r\nconst Home = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null); // Estado para producto seleccionado\r\n\r\n  // Función para obtener todos los productos\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      setProducts(response.data); // Actualizar el estado con los productos obtenidos\r\n    } catch (error) {\r\n      console.error('Error al obtener los productos:', error);\r\n    }\r\n  };\r\n\r\n  // Ejecutar fetchProducts cuando el componente se monta\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Función para seleccionar un producto para editar\r\n  const handleEdit = (product) => {\r\n    setSelectedProduct(product); // Establecer el producto seleccionado\r\n  };\r\n\r\n  // Función para actualizar la lista de productos después de una actualización\r\n  const handleUpdate = async () => {\r\n    await fetchProducts(); // Actualizar la lista de productos\r\n    setSelectedProduct(null); // Limpiar el producto seleccionado\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to your Store</h1>\r\n      {/* Componente para crear un nuevo producto */}\r\n      <CreateProduct onProductCreated={fetchProducts} />\r\n\r\n      {/* Componente para listar los productos */}\r\n      <ProductList\r\n        products={products} // Lista de productos\r\n        onDelete={fetchProducts} // Función para actualizar la lista después de eliminar\r\n        onEdit={handleEdit} // Función para seleccionar un producto para editar\r\n      />\r\n\r\n      {/* Componente para actualizar un producto si se ha seleccionado */}\r\n      {selectedProduct && (\r\n        <UpdateProduct productId={selectedProduct._id} onProductUpdated={handleUpdate} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,SAAS,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpH,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9D;EACA,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC;MAC3CL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACdsB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,UAAU,GAAIC,OAAO,IAAK;IAC9BR,kBAAkB,CAACQ,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMR,aAAa,CAAC,CAAC,CAAC,CAAC;IACvBD,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BpB,OAAA,CAACd,aAAa;MAACmC,gBAAgB,EAAEd;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlDpB,OAAA,CAACb,WAAW;MACVgB,QAAQ,EAAEA,QAAS,CAAC;MAAA;MACpBmB,QAAQ,EAAEf,aAAc,CAAC;MAAA;MACzBgB,MAAM,EAAEV,UAAW,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EAGDf,eAAe,iBACdL,OAAA,CAACZ,aAAa;MAACoC,SAAS,EAAEnB,eAAe,CAACoB,GAAI;MAACC,gBAAgB,EAAEX;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjDID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}